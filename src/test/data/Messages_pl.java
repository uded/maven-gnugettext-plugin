/* Automatically generated by GNU msgfmt.  Do not modify!  */
public class Messages_pl extends java.util.ResourceBundle {
  private static final java.lang.String[] table;
  static {
    java.lang.String[] t = new java.lang.String[16];
    t[0] = "";
    t[1] = "Project-Id-Version: TEST\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2009-06-14 04:17+0200\nPO-Revision-Date: 2009-06-14 04:20+0100\nLast-Translator: \u0141ukasz R\u017canek <lukasz@radical.com.pl>\nLanguage-Team: \nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nX-Poedit-Language: Polish\nX-Poedit-Country: POLAND\nX-Poedit-SourceCharset: utf-8\n";
    t[4] = "Test";
    t[5] = "Test";
    t[8] = "...neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?";
    t[9] = "...nie ma zatem takiego cz\u0142owieka, kt\u00f3ry kocha cierpienie samo w sobie, kto by do niego d\u0105\u017cy\u0142 lub chcia\u0142 go do\u015bwiadczy\u0107, tylko dlatego, \u017ce jest to cierpienie, a dlatego, \u017ce czasami zdarzaj\u0105 si\u0119 takie okoliczno\u015bci, w kt\u00f3rych to cierpienie mo\u017ce doprowadzi\u0107 go do jakiej\u015b wielkiej przyjemno\u015bci. Daj\u0105c przyk\u0142ad banalny: kt\u00f3\u017c z nas kiedy\u015b nie podejmowa\u0142 si\u0119 trudnego wysi\u0142ku fizycznego maj\u0105c na wzgl\u0119dzie uzyskanie z tego korzy\u015bci? Kto ma jakiekolwiek prawo obwinia\u0107 cz\u0142owieka, kt\u00f3ry wybiera przyjemno\u015b\u0107 nie wi\u0105\u017c\u0105c\u0105 si\u0119 z przykrymi konsekwencjami, albo tego, kto unika takiego cierpienia, kt\u00f3re nie prowadzi do przyjemno\u015bci?";
    table = t;
  }
  public java.lang.Object handleGetObject (java.lang.String msgid) throws java.util.MissingResourceException {
    int hash_val = msgid.hashCode() & 0x7fffffff;
    int idx = (hash_val % 8) << 1;
    java.lang.Object found = table[idx];
    if (found != null && msgid.equals(found))
      return table[idx + 1];
    return null;
  }
  public java.util.Enumeration getKeys () {
    return
      new java.util.Enumeration() {
        private int idx = 0;
        { while (idx < 16 && table[idx] == null) idx += 2; }
        public boolean hasMoreElements () {
          return (idx < 16);
        }
        public java.lang.Object nextElement () {
          java.lang.Object key = table[idx];
          do idx += 2; while (idx < 16 && table[idx] == null);
          return key;
        }
      };
  }
  public java.util.ResourceBundle getParent () {
    return parent;
  }
}
